package com.example.demo.pojo.controller;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.config.web.server.ServerHttpSecurity;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.provisioning.InMemoryUserDetailsManager;

@Configuration
@EnableWebSecurity
public class configurePath extends WebSecurityConfigurerAdapter {
@Bean
	public UserDetailsService userDetailsService() {
    InMemoryUserDetailsManager manager = new InMemoryUserDetailsManager();
    manager.createUser(User.withUsername("user").password("password")
        .roles("USER").build());
    return manager;
}
	protected void configure(ServerHttpSecurity http) throws Exception {

		http.authorizeRequests().antMatchers("/actuator/env").hasRole("USER");	

		http.authorizeExchange()
	      .pathMatchers("/actuator/**").permitAll()
	      .anyExchange().authenticated()
	      .and().build()
	}
}
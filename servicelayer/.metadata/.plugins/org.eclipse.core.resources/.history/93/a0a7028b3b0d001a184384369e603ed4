package com.example.jpagradle.api;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.jpagradle.pojo.Convert;
import com.example.jpagradle.pojo.Employee;
import com.example.jpagradle.pojo.EmployeeDto;
import com.example.jpagradle.service.EmployeeService;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;

@Api(description = "Set of endpoints for Creating, Retrieving, Updating and Deleting of Persons.")
@RestController()
@RequestMapping("/employee")
public class Employeeeapi {

	@Autowired
	private EmployeeService employeeService;
	
//	@Autowired
//	private ModelMapper modelMapper;

	@ApiOperation("Creates new user")
	@PostMapping
	public ResponseEntity<?> create(@ApiParam("Detailed description here") @Validated EmployeeDto empdto) {
		return employeeService.createEmployee(empdto);
	}

	@ApiOperation("Return employee matching the passed id")
	@GetMapping(path = "{id}")
	public ResponseEntity<?> read(@ApiParam("id of the employee to be searched") @PathVariable String id) {
		return employeeService.getEmployee(id);
	}

//	@ApiOperation("update user")
//	@PutMapping
//	public ResponseEntity<?> update(@ApiParam("Detailed description here") EmployeeDto empdto) {
//		return service.update(modelMapper.map(empdto, Employee.class));
//	}
//
//	@ApiOperation("Delete user")
//	@DeleteMapping(path = "{id}")
//	public ResponseEntity<?> delete(@ApiParam("Detailed description here") @PathVariable Long id) {
//		return service.delete(id);
//	}

}

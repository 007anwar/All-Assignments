package com.example.jpagradle.api;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.jpagradle.pojo.Convert;
import com.example.jpagradle.pojo.Employee;
import com.example.jpagradle.pojo.EmployeeDto;
import com.example.jpagradle.service.EmployeeService;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;

@Api(description = "Set of endpoints for Creating, Retrieving, Updating and Deleting of Persons.")
@RestController()
@RequestMapping("/emp")
public class Employeeeapi {

	@Autowired
	EmployeeService service;
	@Autowired
	Convert convert;
	@Autowired
	private ModelMapper modelMapper;

	@ApiOperation("Creates new user")
	@PostMapping
	public ResponseEntity<?> create(@ApiParam("Detailed description here") EmployeeDto empdto) {
		return service.create(modelMapper.map(empdto, Employee.class));
	}

	@ApiOperation("read user details")
	@GetMapping(path = "{id}")
	public String read(@ApiParam("Detailed description here") @PathVariable Long id) {
		return service.read(id);
	}

	@ApiOperation("update user")
	@PutMapping
	public ResponseEntity<?> update(@ApiParam("Detailed description here") EmployeeDto empdto) {
		return service.update(modelMapper.map(empdto, Employee.class));
	}

	@ApiOperation("Delete user")
	@DeleteMapping(path = "{id}")
	public ResponseEntity<?> delete(@ApiParam("Detailed description here") @PathVariable Long id) {
		return service.delete(id);
	}

}

package com.example.JPAGRADLE.service;

import java.util.Optional;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import com.example.JPAGRADLE.pojo.Employee;
import com.example.JPAGRADLE.repo.EmpRepo;
@Service
public class CrudService {
	private static final Logger logger = LoggerFactory.getLogger(CrudService.class);
	@Autowired
	EmpRepo repo;
	private Long id;

	public ResponseEntity<?> create(Employee emp) {
		try {
			repo.save(emp);
			logger.info("Employee saved");
		} catch (Exception e) {
			logger.error(e.getMessage());
			return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
		}
		return new ResponseEntity<>(HttpStatus.CREATED);

	}

	
	
	public String read(Long id) {
		try {
			Employee employee = repo.findById(id);
			if(employee==null)
			{
				return "Employe with id"+id+"notfoud";
			}
			return employee.toString();
		} catch (Exception e) {
			return e.getMessage();
		}
	}



	public ResponseEntity<?> update(Employee emp) {
		Employee empfromdb = repo.findById(emp.getId());
		if(empfromdb==null)
		{
			return new ResponseEntity<>(HttpStatus.NOT_ACCEPTABLE);	
		}
	
		id = emp.getId();
		String email = emp.getEmail();
		String designation = emp.getDesignation();
		String name = emp.getName();
		if (name != null) {
			empfromdb.setName(name);
		}
		if (designation != null) {
			empfromdb.setDesignation(designation);
		}
		if (email != null) {
			empfromdb.setEmail(email);
		}
		
		repo.save(empfromdb);
		return new ResponseEntity<>(HttpStatus.CREATED);
		
	}



	public ResponseEntity<?> delete(Long id) {
		if(id==null)
		{
			return new ResponseEntity<>(HttpStatus.NOT_ACCEPTABLE);	
		}
		try {
			Employee emp = repo.findById(id);
			if(emp!=null)
			{
			repo.delete(emp);
			logger.info("Employee deleted");
			}
		} catch (Exception e) {
			logger.error("Error");
		}
		return new ResponseEntity<>(HttpStatus.OK);
	}
	
	
	
	
}
